#!/bin/bash
# Desktop recorder/auto paster
#
# Lets you select an area of the screen with the mouse, then records a
# screencast in that section of your screen. Once you're done, it'll upload it
# to a public server and puts the URL in the clipboard for you. Can also open
# the URL in a browser and automatically middle-click paste the URL as soon as
# it's available if you want.
#
# Requires recordmydesktop, curl and xclip. Also install xautomation and
# libnotify-bin for some of the other features.
#
# Configure the below as appropriate for you.

# Paste site. Needs to return a redirect URI to view the file when we post to it
PASTESITE=f.dollyfish.net.nz

# Which web browser to open the paste in. Leave blank/comment out to do nothing
BROWSER=google-chrome

# Whether to automatically simulate a middle-click paste (needs xautomation)
AUTOPASTE=

# Whether to pop up a notification saying the URL has been retrieved (needs
# libnotify-bin)
NOTIFY=1

# No more configuration beyond this point
set -e


if pgrep recordmydesktop > /dev/null; then
    pkill recordmydesktop
    exit
fi

# Sleep to work around some crazy race condition in i3
sleep 0.2
FILE=$(mktemp)
rm $FILE
echo $FILE

# Variant 1: click on a window to record it
#recordmydesktop --windowid "$(xwininfo | grep 'Window id' | awk '{print $4}')" --no-sound -o $FILE

# Variant 2: click/drag to select a region to record
COORDS=$( cd $HOME/src/coords/ && . bin/activate && python line.py )
set $COORDS
recordmydesktop -x $1 -y $2 --width $3 --height $4 --no-sound -o $FILE

url=$(curl -w '%{redirect_url}\n' -F "file=@$FILE.ogv;type=application/ogg; charset=binary" $PASTESITE)
echo $url | xclip
[ -n "$BROWSER" ] && $BROWSER $url
[ $AUTOPASTE ] && xte 'mouseclick 2'
[ $NOTIFY ] && notify-send -c presence -i /usr/share/icons/hicolor/32x32/apps/checkbox.png "Video URL" "$url"
rm $FILE.ogv
